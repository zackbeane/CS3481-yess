          .pos 0
main:     irmovq stack, %rsp
          #initialize %rdi to the number of
          #fibonacci numbers to compute
          irmovq $20, %rdi
          #initialize %rsi to the address
          #of where to store the numbers
          irmovq fibolst, %rsi
          call fibo
          halt
# fibo 
# Computes fibonacci numbers
# param: %rdi - contains a count of the 
#        number of fibonacci numbers to 
#        compute
# param: %rsi - contains the starting 
#        address in memory of where to
#        store the numbers
#
fibo:     #put your code here  
         irmovq $8, %rcx
         irmovq $1, %rbx
         irmovq $0, %rax
         rmmovq %rax, 0(%rsi)
         addq %rcx, %rsi
         subq %rbx, %rdi
         irmovq $1, %rax
         rmmovq %rax, 0(%rsi)
         addq %rcx, %rsi
         subq %rbx, %rdi
loop: 	
		 andq %rdi, %rdi
		 je done
		 xorq %rbp, %rbp
		 mrmovq -8(%rsi), %rdx
		 addq %rdx, %rbp
		 mrmovq -16(%rsi), %rdx
		 addq %rdx, %rbp
		 rmmovq %rbp, 0(%rsi)
		 addq %rcx, %rsi
		 subq %rbx, %rdi
		 jmp loop      
done:     ret
#
          .align 8
fibolst:  .quad 0 
          .pos 0x400 
stack:    
